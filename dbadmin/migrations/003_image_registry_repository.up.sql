-- repository
CREATE TABLE IF NOT EXISTS repository
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pyxis_id      TEXT NOT NULL UNIQUE CHECK (NOT empty(pyxis_id)),
    modified_date TIMESTAMP WITH TIME ZONE NOT NULL,
    registry      TEXT NOT NULL CHECK (NOT empty(registry)),
    repository    TEXT NOT NULL CHECK (NOT empty(repository)),
    UNIQUE (registry, repository)
) TABLESPACE pg_default;

GRANT SELECT, INSERT, UPDATE, DELETE ON repository TO pyxis_gatherer;

-- repository_image
CREATE TABLE IF NOT EXISTS repository_image
(
    repository_id BIGINT NOT NULL REFERENCES repository (id),
    image_id      BIGINT NOT NULL REFERENCES image (id),
    UNIQUE (repository_id, image_id)
) TABLESPACE pg_default;

GRANT SELECT, INSERT, UPDATE, DELETE ON repository_image TO pyxis_gatherer;

ALTER TABLE image ADD COLUMN pyxis_id TEXT NOT NULL UNIQUE CHECK (NOT empty(pyxis_id));
ALTER TABLE image ADD COLUMN modified_date TIMESTAMP WITH TIME ZONE NOT NULL;
ALTER TABLE image ADD CONSTRAINT image_digest_check CHECK (NOT empty(digest));

GRANT SELECT, INSERT, UPDATE, DELETE ON image TO pyxis_gatherer;
GRANT SELECT, INSERT ON cve TO pyxis_gatherer;
GRANT SELECT, INSERT, UPDATE, DELETE ON image_cve TO pyxis_gatherer;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO archive_db_writer;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO archive_db_writer;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO pyxis_gatherer;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO pyxis_gatherer;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO vmaas_gatherer;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO vmaas_gatherer;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO cve_aggregator;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO cve_aggregator;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO manager;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO manager;
